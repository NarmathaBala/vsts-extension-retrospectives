name: 'CD - Frontend'

on:
  push:
    branches:
      - master
      - dev
      - 'releases/**'
  pull_request:
    branches:
      - master
      - dev
      - 'releases/**'
  workflow_dispatch:

jobs:
  deploy:
    name: Frontend - Deploy package
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      name: Check out repository

    - run: |
        # TODO: Update default variables before merging

        branch=${GITHUB_REF#refs/heads/}
        target_branch=${{ github.event.pull_request.base.ref }}

        echo $branch
        echo $target_branch

        if [[ "$branch" == releases/* ]]; then
          echo "Setting config for Production environment"
          echo "##[set-output name=is_prod;]true"
          echo "##[set-output name=service_url;]https://retrospectivesbackendservice.azurewebsites.net"
        else if [[ "$branch" == master ]] || [[ "$branch" == dev ]]; then
          echo "Setting config for Dev environment"
          echo "##[set-output name=is_dev;]true"
          echo "##[set-output name=service_url;]https://thcaoretro.azurewebsites.net"
        else if [[ "$target_branch" == master ]] || [[ "$target_branch" == dev ]]; then
          echo "Setting config for PR validation"
          echo "##[set-output name=is_pr;]true"
          echo "##[set-output name=service_url;]https://thcaoretro.azurewebsites.net"
        fi
      name: Set up default variables
      id: config

    - run: |
        # TODO: Update default values before merging
        echo "CollaborationStateServiceUrl=https://thcaoretro.azurewebsites.net" >> $GITHUB_ENV
      name: Set up default variables

    - run: |
        npm install -g tfx-cli node-jq
      name: Install tools used for deployment

    - run: |
        # Create environment.tsx from template
        cp config/environment.tsx.template config/environment.tsx

        # Inject default backend service url

        echo cp config/environment.tsx.template config/environment.tsx
      name: Prepare environment.tsx
      working-directory: 'RetrospectiveExtension.Frontend'

    - run: |
        npm install
        npm run build:p
      name: Prepare package
      working-directory: 'RetrospectiveExtension.Frontend'
